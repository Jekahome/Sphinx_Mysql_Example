common
{
	  lemmatizer_base = C:/OpenServer/domains/JediAssistant/common/components/var/lib/sphinxsearch/lemmatizer
	  plugin_dir      = C:/OpenServer/domains/JediAssistant/common/components/var/lib/sphinxsearch/udf

	 # CREATE FUNCTION myfoo RETURNS INTEGER SONAME 'ConsoleApplication1.dll';
	 # SELECT   myfoo(2) AS q from main;
}

searchd
{
    listen = 127.0.0.1:9306:mysql41
    #listen    = 127.0.0.1:3312
    #listen    = 9306:mysql41
    log       =  C:/OpenServer/domains/JediAssistant/common/components/var/log/sphinxsearch/booksearchd.log
    query_log =  C:/OpenServer/domains/JediAssistant/common/components/var/log/sphinxsearch/bookquery.log
    pid_file  =  C:/OpenServer/domains/JediAssistant/common/components/var/lib/sphinxsearch/booksearchd.pid

    dist_threads = 4
    thread_stack = 2M
    binlog_path  =   C:/OpenServer/domains/JediAssistant/common/components/var/log/binlog
    binlog_flush = 1
    collation_server = utf8_general_ci
    max_children     = 1000
    workers          = threads
    read_timeout     = 5
    query_log_format = sphinxql
    client_timeout = 3600
     mva_updates_pool = 16M
    seamless_rotate  = 1
	expansion_limit = 16
	predicted_time_costs = doc=128, hit=96, skip=4096, match=128
	sphinxql_state = C:/OpenServer/domains/JediAssistant/common/components/var/lib/sphinxsearch/plagin/uservars.sql

	 #collation_server = libc_ci
	 #collation_libc_locale	= ru_RU.UTF-8

   # rt_merge_iops ограничитель операций ввода/вывода
    rt_merge_iops = 40
    rt_merge_maxiosize = 1M
    rt_flush_period  = 3600
}

indexer
{
      mem_limit = 1000M
      max_iops  = 100
	  max_file_field_buffer = 128M
      lemmatizer_cache = 125M
}

source  source_base
{
    type            = mysql
    sql_host        = 127.0.0.1
    sql_user        = idc_bookinist
    sql_pass        = parol
    sql_db          = idc_bookinist
    sql_port        = 3306
	#sql_query_pre   = SET lc_time_names = ru_RU

     #sql_query_pre   = SET INDEX index_item_1 GLOBAL NAMES = utf8_general_ci
     #sql_query_pre   = SET GLOBAL CHARACTER_SET_RESULTS  utf8

     #sql_query_pre   = SET GLOBAL NAMES=utf8
	 #sql_query_pre   = SET INDEX index_item_1 GLOBAL NAMES = utf8_general_ci
     #sql_query_post   = SET GLOBAL NAMES utf8_general_ci
	 #sql_query_pre   = SET character_set_server=utf8_general_ci
	 #sql_query_pre   = SET collation_server=utf8_general_ci
	 #sql_query_pre   = SET COLLATION_CONNECTION=utf8_general_ci
	 #sql_query_pre   = character_set_results=utf8
    sql_query_pre   = SET WAIT_TIMEOUT=25400
    sql_query_pre  = SET CHARACTER SET utf8
    sql_query_pre   = SET SESSION query_cache_type=OFF

    # каждые sql_range_step шт. id будет пауза на sql_ranged_throttle mc. и вызовется еще раз sql_query_range
	sql_range_step  = 100000
	sql_ranged_throttle = 0
    mysql_connect_flags = 32


}

source child_source_base : source_base
{

	sql_field_string = book
	sql_field_string = protagonist
	sql_field_string = author
	sql_field_string = category
	sql_field_string = isbn
	sql_attr_uint    = lang_id
	sql_attr_bool    = is_deleted
	sql_attr_uint    = status:3
    #sql_attr_json
}

source  source_item_1:child_source_base
{

	sql_query_pre    =   SET NAMES utf8

	sql_query_pre    =  \
					    CALL `sp_range_ex` (@out_min , @out_max,1,4);

	#sql_query_pre   =  REPLACE INTO mva_range(out_min, out_max) VALUES ( @out_min, @out_max);


	#sql_query_range =  SELECT @out_min , @out_max ;
    sql_query_pre   =  REPLACE INTO mva_range(id,out_min,out_max  ) VALUES (1,@out_min, @out_max )  ;
	#sql_query_pre    =    UPDATE mva_range SET out_min=@out_min ,out_max=@out_max WHERE id=1 ;

	sql_query_range  =  \
						 SELECT out_min , out_max FROM mva_range WHERE id=1 ;

sql_query = \
			SELECT idc_books.book_id,idc_books.book,idc_books.isbn,idc_books.protagonist,idc_books.lang_id,idc_books.format_id,0 AS 'is_deleted',idc_books.status,  \
			GROUP_CONCAT(  idc_authors.author SEPARATOR ',') AS 'author',  \
			GROUP_CONCAT(  idc_categories.category SEPARATOR ',') AS 'category'  \
			FROM idc_books, idc_book_author_hooks,idc_authors,  \
			idc_book_categories_hooks,idc_categories  \
			WHERE idc_books.book_id = idc_book_author_hooks.book_id AND  \
			idc_book_author_hooks.author_id = idc_authors.author_id AND  \
			idc_categories.category_id = idc_book_categories_hooks.category_id AND  \
			idc_books.book_id =  idc_book_categories_hooks.book_id AND  \
			idc_books.book_id >=$start AND idc_books.book_id <= $end  \
			GROUP BY idc_books.book_id;


sql_attr_multi  = \
					uint  seria_id from   ranged-query; \
					SELECT  idc_books.book_id,idc_book_series_hooks.seria_id  \
					FROM   idc_books, idc_book_series_hooks  \
					WHERE idc_books.book_id = idc_book_series_hooks.book_id AND  \
					idc_books.book_id >=$start AND idc_books.book_id <= $end; \
                    SELECT out_min   , out_max FROM mva_range WHERE id=1  ;



sql_attr_multi  = \
					uint  publisher_id from   ranged-query; \
					SELECT  idc_books.book_id,idc_book_publisher_hooks.publisher_id  \
					FROM   idc_books, idc_book_publisher_hooks  \
					WHERE idc_books.book_id = idc_book_publisher_hooks.book_id AND  \
					idc_books.book_id >=$start AND idc_books.book_id <= $end;  \
					SELECT out_min   , out_max FROM mva_range WHERE id=1  ;

sql_attr_multi  = \
					uint  list_id from   ranged-query; \
					SELECT  idc_books.book_id, idc_book_list_hooks.list_id  \
					FROM   idc_books,  idc_book_list_hooks   \
					WHERE idc_books.book_id = idc_book_list_hooks.book_id AND  \
					idc_books.book_id >=$start AND idc_books.book_id <= $end; \
					SELECT out_min   , out_max FROM mva_range WHERE id=1 ;


sql_attr_multi  = \
					uint  author_id from   ranged-query; \
					SELECT  idc_books.book_id,idc_book_author_hooks.author_id  \
					FROM   idc_books, idc_book_author_hooks   \
					WHERE idc_books.book_id = idc_book_author_hooks.book_id AND  \
					idc_books.book_id >=$start AND idc_books.book_id <= $end; \
					SELECT out_min   , out_max FROM mva_range WHERE id=1  ;

sql_attr_multi  = \
					uint  category_id from   ranged-query; \
					SELECT  idc_books.book_id, idc_book_categories_hooks.category_id \
					FROM   idc_books, idc_book_categories_hooks \
                    WHERE idc_books.book_id = idc_book_categories_hooks.book_id   AND  \
					idc_books.book_id >=$start AND idc_books.book_id <= $end; \
					SELECT out_min   , out_max FROM mva_range WHERE id=1  ;



}

 source  source_item_2:child_source_base
{
	sql_query_pre    =   SET NAMES utf8
	sql_query_pre    =  \
						 CALL `sp_range_ex` (@out_min , @out_max,2,4);
	#sql_query_range =   SELECT @out_min   , @out_max   ;

   sql_query_pre   =  REPLACE INTO mva_range(id,out_min,out_max  ) VALUES (2,@out_min, @out_max )  ;
	#sql_query_pre    =   UPDATE mva_range SET out_min=@out_min ,out_max=@out_max WHERE id=2  ;

	sql_query_range  =    SELECT out_min   , out_max FROM mva_range WHERE id=2  ;



sql_query = \
			SELECT idc_books.book_id,idc_books.book,idc_books.isbn,idc_books.protagonist,idc_books.lang_id,idc_books.format_id,0 AS 'is_deleted',idc_books.status,  \
			GROUP_CONCAT(  idc_authors.author SEPARATOR ',') AS 'author',  \
			GROUP_CONCAT(  idc_categories.category SEPARATOR ',') AS 'category'  \
			FROM idc_books, idc_book_author_hooks,idc_authors,  \
			idc_book_categories_hooks,idc_categories  \
			WHERE idc_books.book_id = idc_book_author_hooks.book_id AND  \
			idc_book_author_hooks.author_id = idc_authors.author_id AND  \
			idc_categories.category_id = idc_book_categories_hooks.category_id AND  \
			idc_books.book_id =  idc_book_categories_hooks.book_id  AND \
			idc_books.book_id >=$start AND idc_books.book_id <= $end  \
			GROUP BY idc_books.book_id;

sql_attr_multi  = \
					uint  seria_id from   ranged-query; \
					SELECT  idc_books.book_id,idc_book_series_hooks.seria_id  \
					FROM   idc_books, idc_book_series_hooks  \
					WHERE idc_books.book_id = idc_book_series_hooks.book_id AND  \
					idc_books.book_id >=$start AND idc_books.book_id <= $end; \
                    SELECT out_min   , out_max FROM mva_range WHERE id=2  ;



sql_attr_multi  = \
					uint  publisher_id from   ranged-query; \
					SELECT  idc_books.book_id,idc_book_publisher_hooks.publisher_id  \
					FROM   idc_books, idc_book_publisher_hooks  \
					WHERE idc_books.book_id = idc_book_publisher_hooks.book_id AND  \
					idc_books.book_id >=$start AND idc_books.book_id <= $end;  \
					SELECT out_min   , out_max FROM mva_range WHERE id=2  ;

sql_attr_multi  = \
					uint  list_id from   ranged-query; \
					SELECT  idc_books.book_id, idc_book_list_hooks.list_id  \
					FROM   idc_books,  idc_book_list_hooks   \
					WHERE idc_books.book_id = idc_book_list_hooks.book_id AND  \
					idc_books.book_id >=$start AND idc_books.book_id <= $end; \
					SELECT out_min   , out_max FROM mva_range WHERE id=2 ;


sql_attr_multi  = \
					uint  author_id from   ranged-query; \
					SELECT  idc_books.book_id,idc_book_author_hooks.author_id  \
					FROM   idc_books, idc_book_author_hooks   \
					WHERE idc_books.book_id = idc_book_author_hooks.book_id AND  \
					idc_books.book_id >=$start AND idc_books.book_id <= $end; \
					SELECT out_min   , out_max FROM mva_range WHERE id=2  ;

sql_attr_multi  = \
					uint  category_id from   ranged-query; \
					SELECT  idc_books.book_id, idc_book_categories_hooks.category_id \
					FROM   idc_books, idc_book_categories_hooks \
                    WHERE idc_books.book_id = idc_book_categories_hooks.book_id   AND  \
					idc_books.book_id >=$start AND idc_books.book_id <= $end; \
					SELECT out_min   , out_max FROM mva_range WHERE id=2  ;



}

 source  source_item_3:child_source_base
{
	sql_query_pre       = SET NAMES utf8
	sql_query_pre       =  \
						CALL `sp_range_ex` (@out_min , @out_max,3,4);
	#sql_query_range    =  SELECT @out_min   , @out_max   ;

    sql_query_pre   =  REPLACE INTO mva_range(id,out_min,out_max  ) VALUES (3,@out_min, @out_max )  ;
	#sql_query_pre    = UPDATE mva_range SET out_min=@out_min ,out_max=@out_max WHERE id=3  ;
	sql_query_range  = SELECT out_min   , out_max FROM mva_range WHERE id=3  ;


sql_query = \
			SELECT idc_books.book_id,idc_books.book,idc_books.isbn,idc_books.protagonist,idc_books.lang_id,idc_books.format_id,0 AS 'is_deleted',idc_books.status,  \
			GROUP_CONCAT(  idc_authors.author SEPARATOR ',') AS 'author',  \
			GROUP_CONCAT(  idc_categories.category SEPARATOR ',') AS 'category'  \
			FROM idc_books, idc_book_author_hooks,idc_authors,  \
			idc_book_categories_hooks,idc_categories  \
			WHERE idc_books.book_id = idc_book_author_hooks.book_id AND  \
			idc_book_author_hooks.author_id = idc_authors.author_id AND  \
			idc_categories.category_id = idc_book_categories_hooks.category_id AND  \
			idc_books.book_id =  idc_book_categories_hooks.book_id  AND \
			idc_books.book_id >=$start AND idc_books.book_id <= $end  \
			GROUP BY idc_books.book_id;

sql_attr_multi  = \
					uint  seria_id from   ranged-query; \
					SELECT  idc_books.book_id,idc_book_series_hooks.seria_id  \
					FROM   idc_books, idc_book_series_hooks  \
					WHERE idc_books.book_id = idc_book_series_hooks.book_id AND  \
					idc_books.book_id >=$start AND idc_books.book_id <= $end; \
                    SELECT out_min   , out_max FROM mva_range WHERE id=3  ;



sql_attr_multi  = \
					uint  publisher_id from   ranged-query; \
					SELECT  idc_books.book_id,idc_book_publisher_hooks.publisher_id  \
					FROM   idc_books, idc_book_publisher_hooks  \
					WHERE idc_books.book_id = idc_book_publisher_hooks.book_id AND  \
					idc_books.book_id >=$start AND idc_books.book_id <= $end;  \
					SELECT out_min   , out_max FROM mva_range WHERE id=3  ;

sql_attr_multi  = \
					uint  list_id from   ranged-query; \
					SELECT  idc_books.book_id, idc_book_list_hooks.list_id  \
					FROM   idc_books,  idc_book_list_hooks   \
					WHERE idc_books.book_id = idc_book_list_hooks.book_id AND  \
					idc_books.book_id >=$start AND idc_books.book_id <= $end; \
					SELECT out_min   , out_max FROM mva_range WHERE id=3 ;


sql_attr_multi  = \
					uint  author_id from   ranged-query; \
					SELECT  idc_books.book_id,idc_book_author_hooks.author_id  \
					FROM   idc_books, idc_book_author_hooks   \
					WHERE idc_books.book_id = idc_book_author_hooks.book_id AND  \
					idc_books.book_id >=$start AND idc_books.book_id <= $end; \
					SELECT out_min   , out_max FROM mva_range WHERE id=3  ;

sql_attr_multi  = \
					uint  category_id from   ranged-query; \
					SELECT  idc_books.book_id, idc_book_categories_hooks.category_id \
					FROM   idc_books, idc_book_categories_hooks \
                    WHERE idc_books.book_id = idc_book_categories_hooks.book_id   AND  \
					idc_books.book_id >=$start AND idc_books.book_id <= $end; \
					SELECT out_min   , out_max FROM mva_range WHERE id=3  ;

}

 source  source_item_4:child_source_base
{
	sql_query_pre    = SET NAMES utf8
	sql_query_pre    = CALL `sp_range_ex` (@out_min , @out_max,4,4);

	#sql_query_range = SELECT @out_min   , @out_max   ;

    sql_query_pre   =  REPLACE INTO mva_range(id,out_min,out_max  ) VALUES (4,@out_min, @out_max )  ;
	#sql_query_pre    = UPDATE mva_range SET out_min=@out_min ,out_max=@out_max WHERE id=4  ;
	sql_query_range  = SELECT out_min   , out_max FROM mva_range WHERE id=4  ;


sql_query = \
			SELECT idc_books.book_id,idc_books.book,idc_books.isbn,idc_books.protagonist,idc_books.lang_id,idc_books.format_id,0 AS 'is_deleted',idc_books.status,  \
			GROUP_CONCAT(  idc_authors.author SEPARATOR ',') AS 'author',  \
			GROUP_CONCAT(  idc_categories.category SEPARATOR ',') AS 'category'  \
			FROM idc_books, idc_book_author_hooks,idc_authors,  \
			idc_book_categories_hooks,idc_categories  \
			WHERE idc_books.book_id = idc_book_author_hooks.book_id AND  \
			idc_book_author_hooks.author_id = idc_authors.author_id AND  \
			idc_categories.category_id = idc_book_categories_hooks.category_id AND  \
			idc_books.book_id =  idc_book_categories_hooks.book_id AND  \
			idc_books.book_id >=$start AND idc_books.book_id <= $end  \
			GROUP BY idc_books.book_id;


sql_attr_multi  = \
					uint  seria_id from   ranged-query; \
					SELECT  idc_books.book_id,idc_book_series_hooks.seria_id  \
					FROM   idc_books, idc_book_series_hooks  \
					WHERE idc_books.book_id = idc_book_series_hooks.book_id AND  \
					idc_books.book_id >=$start AND idc_books.book_id <= $end; \
                    SELECT out_min   , out_max FROM mva_range WHERE id=4  ;



sql_attr_multi  = \
					uint  publisher_id from   ranged-query; \
					SELECT  idc_books.book_id,idc_book_publisher_hooks.publisher_id  \
					FROM   idc_books, idc_book_publisher_hooks  \
					WHERE idc_books.book_id = idc_book_publisher_hooks.book_id AND  \
					idc_books.book_id >=$start AND idc_books.book_id <= $end;  \
					SELECT out_min   , out_max FROM mva_range WHERE id=4  ;

sql_attr_multi  = \
					uint  list_id from   ranged-query; \
					SELECT  idc_books.book_id, idc_book_list_hooks.list_id  \
					FROM   idc_books,  idc_book_list_hooks   \
					WHERE idc_books.book_id = idc_book_list_hooks.book_id AND  \
					idc_books.book_id >=$start AND idc_books.book_id <= $end; \
					SELECT out_min   , out_max FROM mva_range WHERE id=4 ;


sql_attr_multi  = \
					uint  author_id from   ranged-query; \
					SELECT  idc_books.book_id,idc_book_author_hooks.author_id  \
					FROM   idc_books, idc_book_author_hooks   \
					WHERE idc_books.book_id = idc_book_author_hooks.book_id AND  \
					idc_books.book_id >=$start AND idc_books.book_id <= $end; \
					SELECT out_min   , out_max FROM mva_range WHERE id=4  ;

sql_attr_multi  = \
					uint  category_id from   ranged-query; \
					SELECT  idc_books.book_id, idc_book_categories_hooks.category_id \
					FROM   idc_books, idc_book_categories_hooks \
                    WHERE idc_books.book_id = idc_book_categories_hooks.book_id   AND  \
					idc_books.book_id >=$start AND idc_books.book_id <= $end; \
					SELECT out_min   , out_max FROM mva_range WHERE id=4  ;





}

# -------------------------------------------------------------------
# delta source
# -------------------------------------------------------------------

source  source_delta:child_source_base
{
     sql_query_pre   = SET NAMES utf8
     sql_query_pre = \
					SET @ptime =  UNIX_TIMESTAMP(DATE_ADD(CURDATE(), INTERVAL "-0 00:00:01" DAY_SECOND));
  # sql_query_pre = SET @ptime =  UNIX_TIMESTAMP(DATE_ADD(CURDATE(), INTERVAL "-0 1:15:00" DAY_SECOND));
    sql_query_pre   =  REPLACE INTO mva_range(id,out_min  ) VALUES (5, @ptime );


 # GROUP_CONCAT(  's_',table_indexer.category_id,'_',table_indexer.`key`,'_',table_indexer.value,'_f' SEPARATOR ',') AS 'filter',0 AS 'is_deleted' \




	sql_query = \
				SELECT idc_books.book_id,idc_books.book,idc_books.isbn,idc_books.protagonist,idc_books.lang_id,idc_books.format_id,0 AS 'is_deleted',idc_books.status,  \
				GROUP_CONCAT(  idc_authors.author SEPARATOR ',') AS 'author',  \
				GROUP_CONCAT(  idc_categories.category SEPARATOR ',') AS 'category'  \
				FROM idc_books, idc_book_author_hooks,idc_authors,  \
				idc_book_categories_hooks,idc_categories  \
				WHERE idc_books.book_id = idc_book_author_hooks.book_id AND  \
				idc_book_author_hooks.author_id = idc_authors.author_id AND  \
				idc_categories.category_id = idc_book_categories_hooks.category_id AND  \
				idc_books.book_id =  idc_book_categories_hooks.book_id  \
				AND UNIX_TIMESTAMP(idc_books.update_time) > @ptime  \
				GROUP BY idc_books.book_id;


	sql_attr_multi  = \
						uint  seria_id from   query; \
						SELECT  idc_books.book_id,idc_book_series_hooks.seria_id  \
						FROM   idc_books,  idc_book_series_hooks  \
						WHERE idc_books.book_id = idc_book_series_hooks.book_id AND  \
						 UNIX_TIMESTAMP(idc_books.update_time) > (SELECT out_min  FROM mva_range WHERE id=5)



	sql_attr_multi  = \
						uint  publisher_id from   query; \
						SELECT  idc_books.book_id,idc_book_publisher_hooks.publisher_id  \
						FROM   idc_books, idc_book_publisher_hooks  \
						WHERE idc_books.book_id = idc_book_publisher_hooks.book_id AND  \
						UNIX_TIMESTAMP(idc_books.update_time) > (SELECT out_min  FROM mva_range WHERE id=5)

	sql_attr_multi  = \
						uint  list_id from   query; \
						SELECT  idc_books.book_id, idc_book_list_hooks.list_id  \
						FROM   idc_books,  idc_book_list_hooks \
						WHERE idc_books.book_id = idc_book_list_hooks.book_id AND  \
						UNIX_TIMESTAMP(idc_books.update_time) > (SELECT out_min  FROM mva_range WHERE id=5)


	sql_attr_multi  = \
						uint  author_id from   query; \
						SELECT  idc_books.book_id,idc_book_author_hooks.author_id  \
						FROM   idc_books, idc_book_author_hooks  \
						WHERE idc_books.book_id = idc_book_author_hooks.book_id AND  \
						UNIX_TIMESTAMP(idc_books.update_time) > (SELECT out_min  FROM mva_range WHERE id=5)

	sql_attr_multi  = \
						uint  category_id from   query; \
						SELECT  idc_books.book_id,idc_book_categories_hooks.category_id  \
						FROM   idc_books, idc_book_categories_hooks  \
						WHERE idc_books.book_id = idc_book_categories_hooks.book_id AND  \
						UNIX_TIMESTAMP(idc_books.update_time) > (SELECT out_min  FROM mva_range WHERE id=5)





   # список id- шников которые будет выводить только этот индекс
     sql_query_killlist = \
						SELECT book_id FROM idc_books WHERE UNIX_TIMESTAMP(update_time) > @ptime ;

}











# 12598.49 docs/sec

 index index_item_1
 {
 	type = plain
	source = source_item_1
 	path = C:/OpenServer/domains/JediAssistant/common/components/var/lib/sphinxsearch/data/item1

	mlock = 0

	docinfo = extern
	preopen = 1
	inplace_enable = 0
	# expand_keywords ( running | *running* | =running )
	expand_keywords = 1

	html_strip = 1
	html_remove_elements = style,script
	html_index_attrs = img=alt,tittle; a=tittle;

	dict = keywords

	min_word_len = 3
	morphology = stem_en , stem_ru
    index_exact_words=1
	stopwords_unstemmed = 1

	# min_infix_len = 3
	# min_prefix_len = 3
	#index_exact_words = 1
	blend_chars = U+002B, &->+,%,', @,-,U+0026,?
	phrase_boundary = U+2e, ?, !, U+2026

	 charset_table =0..9, A..Z->a..z,_, a..z, U+410..U+42C->U+430..U+44C,U+42E..U+42F->U+44E..U+44F, U+430..U+44C, U+44E..U+44F, U+0401

	ignore_chars = U+AD
	# min_stemming_len    = 3
	# min_prefix_len      = 3
	# ngram_len           = 1
	# ngram_len           = 1

	# stopword_step=0 not attach rt index
	 stopword_step = 1

	# wordforms =  /ext/wordform.txt
	# stopwords =  /ext/stopwords.txt
 }

 index index_item_2:index_item_1
 {
 	type = plain
 	source = source_item_2
 	path = C:/OpenServer/domains/JediAssistant/common/components/var/lib/sphinxsearch/data/item2
 }

 index index_item_3:index_item_1
 {
 	type = plain
 	source = source_item_3
 	path = C:/OpenServer/domains/JediAssistant/common/components/var/lib/sphinxsearch/data/item3
 }

 index index_item_4:index_item_1
 {
 	type = plain
 	source = source_item_4
 	path = C:/OpenServer/domains/JediAssistant/common/components/var/lib/sphinxsearch/data/item4
 }






# -------------------------------------------------------------------
# delta plain index
# -------------------------------------------------------------------

 index delta:index_item_1
 {
	type   = plain
	source = source_delta
	path   = C:/OpenServer/domains/JediAssistant/common/components/var/lib/sphinxsearch/data/item_delta

 }


 index main
 {
    type  = distributed

    local = index_item_1
    local = index_item_2
    local = index_item_3
    local = index_item_4
    local = delta

    path =  C:/OpenServer/domains/JediAssistant/common/components/var/lib/sphinxsearch/data/item_main
 }



# C:/OpenServer/userdata/config/sphinx.conf
# C:/OpenServer/userdata/logs/SphinxQuery.log
# C:/OpenServer/userdata/logs/SphinxSearchd.log
# C:/OpenServer/userdata/logs/binlog
# C:/OpenServer/userdata/logs/Sphinx.pid
# C:/OpenServer/userdata/Sphinx/data

# C:/OpenServer/modules/sphinx/bin/indexer --all  --config  C:/OpenServer/domains/JediAssistant/common/components/etc/sphinxsearch/sphinxbook.conf --print-queries
# C:/OpenServer/modules/sphinx/bin/indexer --rotate  --all --config C:/OpenServer/domains/JediAssistant/common/components/etc/sphinxsearch/sphinxbook.conf
# C:/OpenServer/modules/sphinx/bin/indexer --rotate  delta --config C:/OpenServer/domains/JediAssistant/common/components/etc/sphinxsearch/sphinxbook.conf

# C:/OpenServer/modules/sphinx/bin/searchd --config C:/OpenServer/domains/JediAssistant/common/components/etc/sphinxsearch/sphinxbook.conf --iostats --logdebugv --console --pidfile
# C:/OpenServer/modules/sphinx/bin/searchd --stop --config C:/OpenServer/domains/JediAssistant/common/components/etc/sphinxsearch/sphinxbook.conf

# C:/OpenServer/modules/sphinx/bin/indextool --dumpdict index_item_1  --config C:/OpenServer/domains/JediAssistant/common/components/etc/sphinxsearch/sphinxbook.conf   > C:/OpenServer/domains/testvariablesphinx/INFO/dumpdict.txt
# C:/OpenServer/modules/database/MySQL-5.5/bin/mysql -h 127.0.0.1 -P 9306 --default-character-set=utf8

 #------------------------------------------------------------------------------------------------------------------
#UPDATE INDEX
# обновляем основной индекс , даже можно последний если остальные не обновлялись и после обновляем дельту которая подтянет id из info предыдущей индексации которая только что была и таким образом затрется сам собой
#   C:/OpenServer/domains/forsphinx/main_delta/lib/sphinx-2.3.1-beta-win64-full/bin/indexer  --config C:/OpenServer/domains/JediAssistant/common/components/etc/sphinxsearch/sphinxbook.conf --rotate --all
#    C:/OpenServer/domains/forsphinx/main_delta/lib/sphinx-2.3.1-beta-win64-full/bin/indexer  --config C:/OpenServer/domains/JediAssistant/common/components/etc/sphinxsearch/sphinxbook.conf --rotate indx_idc1 indx_idc2 indx_idc3 indx_idc4
#    C:/OpenServer/domains/forsphinx/main_delta/lib/sphinx-2.3.1-beta-win64-full/bin/indexer  --config C:/OpenServer/domains/JediAssistant/common/components/etc/sphinxsearch/sphinxbook.conf --rotate delta

# МЕРЖИТЬ МОЖНО ТОЛЬКО plain index
# или второй вариант слить главный и дельта индексы и очистить другим конфигом дельта индекс
#    C:/OpenServer/domains/forsphinx/main_delta/lib/sphinx-2.3.1-beta-win64-full/bin/indexer --print-queries --config C:/OpenServer/domains/forsphinx/main_delta/config.conf   --merge  indx_idc4 delta  --rotate
#    C:/OpenServer/domains/forsphinx/main_delta/lib/sphinx-2.3.1-beta-win64-full/bin/indexer  --config C:/OpenServer/domains/forsphinx/main_delta/config_for_delta.conf --rotate delta

#   C:/OpenServer/domains/forsphinx/main_delta/lib/sphinx-2.3.1-beta-win64-full/bin/indexer --print-queries --config C:/OpenServer/domains/forsphinx/main_delta/config.conf  --merge  indx_idc4 delta    --rotate --merge-killlists
#   C:/OpenServer/domains/forsphinx/main_delta/lib/sphinx-2.3.1-beta-win64-full/bin/indexer --config C:/OpenServer/domains/JediAssistant/common/components/etc/sphinxsearch/sphinxbook.conf --rotate delta

#   C:/OpenServer/domains/forsphinx/main_delta/lib/sphinx-2.3.1-beta-win64-full/bin/indexer --print-queries --config C:/OpenServer/domains/forsphinx/main_delta/config.conf --merge indx_idc4 delta  --merge-dst-range deleted 0 0 --rotate









