common
{
	  lemmatizer_base = C:/index/var/lib/sphinxsearch/lemmatizer
	 # plugin_dir      = D:/index/var/lib/sphinxsearch/udf  
     # CREATE FUNCTION udffunc RETURNS INTEGER SONAME 'udffunc.dll';
	 # CREATE FUNCTION myfoo RETURNS INTEGER SONAME 'ConsoleApplication1.dll';
	 # SELECT   myfoo(2) AS q from main;
	 json_autoconv_numbers = 1
}

searchd
{
    listen     = 127.0.0.1:9306:mysql41 #192.168.1.85
    #listen    = 127.0.0.1:3312
    #listen    = 9306:mysql41
    log        =  C:/index/var/log/sphinxsearch/booksearchd.log
    query_log  =  C:/index/var/log/sphinxsearch/bookquery.log
    pid_file   =  C:/index/var/lib/sphinxsearch/booksearchd.pid
    preopen_indexes = 1 
    dist_threads = 4
    thread_stack = 2M
    binlog_path  = C:/index/var/log/binlog
    binlog_flush = 1
    collation_server  = utf8_general_ci
    max_children      = 1000
    workers           = threads
    read_timeout      = 5
    query_log_format  = sphinxql
    client_timeout    = 3600
    mva_updates_pool = 16M
    seamless_rotate   = 1
	expansion_limit   = 16
	#predicted_time_costs = doc=128, hit=96, skip=4096, match=128
	#sphinxql_state = C:/index/var/lib/sphinxsearch/plagin/uservars.sql
    attr_flush_period = 900
	#collation_server = libc_ci
	#collation_libc_locale	= ru_RU.UTF-8
    max_batch_queries = 0
	subtree_docs_cache = 0
    #rt_merge_iops ограничитель операций ввода/вывода
    rt_merge_iops = 40
    rt_merge_maxiosize = 1M
    rt_flush_period  = 3600
	 
}

indexer
{    
      mem_limit = 200M
      #max_iops  = 100
	  #max_iosize = 0
	  #max_xmlpipe2_field = 8M
	  #max_file_field_buffer = 128M
      #lemmatizer_cache = 128M
      #on_file_field_error = skip_document
	  #on_file_field_error = ignore_field
      #write_buffer = 100M
}

source  source_connect
{
    type            = mysql
    sql_host        = 127.0.0.1
    sql_user        = root
    sql_pass        =  
    sql_db          = sphinxmysql
    sql_port        = 3306
	
	    sql_attr_uint    = deleted
		sql_field_string  = category 
	    sql_attr_string = product
    	sql_field_string = product_field
		sql_attr_json    = fjson
		sql_attr_float    = price
}

source  source_main:source_connect
{
#1. C:/sphinx/bin/indexer deltaproduct  --config  C:/index/etc/sphinxsearch/sphinxmysql.conf --rotate # аганяем по дате добавления или обновления сегодня из mysql в deltaproduct
#2. C:/sphinx/bin/indexer --config C:/index/etc/sphinxsearch/sphinxmysql.conf  --merge index_main deltaproduct   --merge-dst-range deleted 0 0 --rotate # ливаем в index_main новые данные из deltaproduct и удаляем одновременно записи из index_main по атрибуту deleted и обновляем до затирания deltaproduct так как время новых данных должно сравниваться с этим временем обновления
#3. TRUNCATE RTINDEX rt_delta;# чистим RT
 
 
 #  sql_query_post sql_query_post_index
	  sql_query_pre  = SET CHARACTER SET utf8
    sql_query_pre   = SET SESSION query_cache_type=OFF
    # каждые sql_range_step шт. id будет пауза на sql_ranged_throttle mc. и вызовется еще раз sql_query_range
	sql_range_step  = 100000
	sql_ranged_throttle = 0
    mysql_connect_flags = 32
	sql_query_pre   = SET SESSION sql_mode = '';
	sql_query =  CALL `sp_indexer`();
	 
}


# -------------------------------------------------------------------
# delta source
# -------------------------------------------------------------------
source  source_delta:source_connect
{
	# sql_field_string могут быть в SELECT и в MATCH    
	# rt_field не могут быть в SELECT и могут быть в MATCH 
	# для отображения и заполнения main index  в RT используем rt_attr_string дублирует полнотекстовые поля
	# sql_field_string = rt_attr_string для SELECT
	# sql_field_string = rt_field для MATCH 
	sql_query_pre  = SET CHARACTER SET utf8
	sql_query_pre   = SET SESSION query_cache_type=OFF
	# каждые sql_range_step шт. id будет пауза на sql_ranged_throttle mc. и вызовется еще раз sql_query_range
	sql_range_step  = 100000
	sql_ranged_throttle = 0
	mysql_connect_flags = 32
	sql_query_pre   = SET SESSION sql_mode = '';
	sql_query =   CALL sp_indexer_delta('-0 00:00:01');
	# sql_query = SELECT product ,product AS  product_field ,category, deleted,fjson,price  FROM rt_delta 		 
	# sql_query_post =  DELETE FROM rt_delta; 
	# sql_query_post =  TRUNCATE RTINDEX rt_delta;		 
	# "-0 1:15:00" "-0 00:00:01"
	# sql_query_pre = SET @ptime =  UNIX_TIMESTAMP(DATE_ADD(CURDATE(), INTERVAL "-0 00:00:01" DAY_SECOND));
	# sql_query_pre = SET @ptime =  UNIX_TIMESTAMP(DATE_ADD(CURDATE(), INTERVAL "-0 1:15:00" DAY_SECOND));
}

 
 index index_main
 {
 	type = plain
	source = source_main
 	path = C:/index/item1
	mlock = 0
	docinfo = extern
	preopen = 1
	inplace_enable = 0
	# expand_keywords ( running | *running* | =running )
	expand_keywords = 1

	html_strip = 1
	html_remove_elements = style,script
	dict = keywords
	min_word_len = 3
	morphology = lemmatize_ru_all, lemmatize_en_all, stem_enru
    index_exact_words=1
	stopwords_unstemmed = 1
	blend_chars = U+002B, U+26->U+2b,U+27,U+25,  U+40,U+2d,U+0026,U+3f 
	phrase_boundary =  U+2e, U+3f, !,  U+2026
    # U+5F, 
	#U+25 -> %  ,U+3f -> ? , U+40->@ , U+2d-> - ,  U+26 -> & ,U+2b-> +  ,U+27->'  ,U+5f->_
	 charset_table =  0..9, A..Z->a..z, a..z, U+410..U+42C->U+430..U+44C,U+42E..U+42F->U+44E..U+44F, U+430..U+44C, U+44E..U+44F, U+0401
	 ignore_chars =  U+AD
	 stopword_step = 1
}
 
 # -------------------------------------------------------------------
 # delta plain index
 # -------------------------------------------------------------------
   index deltaproduct:index_main 
   {
  	  type   = plain
  	  source = source_delta 
  	  path   = C:/index/item_delta
	  
   }
   
  
     
  index rt_delta:index_main
  {
        type  = rt
        path  = C:/index/item_rt
		
        
    	rt_field = product_field
		rt_field  = category_field 
		rt_attr_string = product
		rt_attr_string = category
    	rt_attr_uint    = deleted
		rt_attr_json    = fjson
		rt_attr_float    = price
	    
        # docinfo              = extern
        # morphology = stem_enru, soundex, metaphone
        # min_word_len         = 3
        # html_strip           = 1
        # Сколько памяти отведем под индекс (что не поместится, будет храниться на диске)
          rt_mem_limit         = 256M
        # blend_chars = U+002B, &->+,%,', @,-,U+0026,?
        # mlock   = 0

        # charset_table =U+5F,0..9, A..Z->a..z, a..z, U+410..U+42C->U+430..U+44C,U+42E..U+42F->U+44E..U+44F, U+430..U+44C, U+44E..U+44F, U+0401     
        # INSERT INTO  rt_delta (id,book,book_field,isbn,protagonist,deleted,status,author,category,trigrams,len,count_tr,count_word,filter,minprice,maxprice) VALUES (101545,'english','english','','',0,2,'','','__e _en eng ngl gli lis ish sh_ h__',6,9,5,'',44,55);
  }
  
   index mainproduct
  {
     type  = distributed
     local = index_main
     path =  C:/index/item_main
  }
   
  
  
  
   
  
  
  
  
  
   # C:/sphinx/bin/indexer index_main --config  C:/index/etc/sphinxsearch/sphinxbook.conf 
   #   C:/sphinx/bin/indexer --print-queries --config C:/index/etc/sphinxsearch/sphinxbook.conf   --merge  index_main deltaproduct  --merge-killlists --merge-dst-range deleted 0 0
    # C:\Users\jeka>C:/sphinx/bin/indexer --print-queries --config C:/index/etc/sphinxsearch/sphinxbook.conf   --merge  index_main deltaproduct  --merge-killlists --merge-dst-range deleted 0 0  --keep-attrs --verbose  --sighup-each
   
# C:/OpenServer/userdata/config/sphinx.conf
# C:/OpenServer/userdata/logs/SphinxQuery.log
# C:/OpenServer/userdata/logs/SphinxSearchd.log
# C:/OpenServer/userdata/logs/binlog
# C:/OpenServer/userdata/logs/Sphinx.pid
# C:/OpenServer/userdata/Sphinx/data

# C:/sphinx/bin/indexer --all  --config  C:/index/etc/sphinxsearch/sphinxbook.conf --print-queries
# C:/sphinx/bin/indexer --rotate  --all --config C:/index/etc/sphinxsearch/sphinxbook.conf
# C:/sphinx/bin/indexer --rotate  deltaproduct --config C:/index/etc/sphinxsearch/sphinxbook.conf

# C:/sphinx/bin/searchd --config C:/index/etc/sphinxsearch/sphinxbook.conf --iostats --logdebugv --console --pidfile
# C:/sphinx/bin/searchd --stop --config C:/index/etc/sphinxsearch/sphinxbook.conf



# C:/sphinx/bin/indextool --dumpdict index_item_1  --config C:/index/etc/sphinxsearch/sphinxbook.conf   > C:/OpenServer/domains/testvariablesphinx/INFO/dumpdict.txt
# C:/database/MySQL-5.6/bin/mysql -h 127.0.0.1 -P 9306 --default-character-set=utf8
 
 #------------------------------------------------------------------------------------------------------------------
#UPDATE INDEX
# обновляем основной индекс , даже можно последний если остальные не обновлялись и после обновляем дельту которая подтянет id из info предыдущей индексации которая только что была и таким образом затрется сам собой
#  indexer  --config sphinxbook.conf --rotate --all
#  indexer  --config sphinxbook.conf --rotate indx_idc1 indx_idc2 indx_idc3 indx_idc4
#  indexer  --config sphinxbook.conf --rotate delta

# МЕРЖИТЬ МОЖНО ТОЛЬКО plain index
# или второй вариант слить главный и дельта индексы и очистить другим конфигом дельта индекс
#   C:/sphinx/bin/indexer --print-queries --config C:/index/etc/sphinxsearch/sphinxbook.conf   --merge  deltaproduct deltaproduct_test   --rotate
#   indexer  --config C:/OpenServer/domains/forsphinx/main_delta/config_for_delta.conf --rotate delta

#   indexer --print-queries --config C:/OpenServer/domains/forsphinx/main_delta/config.conf  --merge  indx_idc4 delta    --rotate --merge-killlists
#   indexer --config C:/OpenServer/domains/JediAssistant/common/components/etc/sphinxsearch/sphinxbook.conf --rotate delta

#   C:/sphinx/bin/indexer --print-queries --config C:/index/etc/sphinxsearch/sphinxbook.conf --merge index_item_4 deltaproduct  --merge-dst-range deleted 0 0 --rotate


# cat C:/index/var/lib/sphinxsearch/list/indexer.list | xargs -n 1 -P 4 C:/sphinx/bin/indexer --config  C:/index/etc/sphinxsearch/sphinxbook.conf

 
#//////////////////////////////////
# indexer --merge  indx_idc1 delta  --merge-killlists
# indexer --merge  indx_idc2 delta  --merge-killlists
# indexer --merge  indx_idc3 delta  --merge-killlists
# indexer --merge  indx_idc4 delta  --merge-killlists
# indexer   --rotate --all

